1. 原则上禁止在业务逻辑中使用join语句查询，需要将此类复杂查询场景转化为多个简单查询场景。有主辅表设计的数据库中，同层级join若无法进行拆分可以被允许，禁止跨层级join或者与外表join
2. 字段查询采取够用原则，每次请求必须明确业务场景需要查询的字段，原则上禁止无脑查询全部字段，禁止SELECT * 查询
3. 原则上禁止不走索引的查询上线，即使当前数据量较小，也需要所有的在线查询都能够利用到高效的索引。
4. 无法使用高效索引，或能使用高效索引但查询结果集过大（主要是大账户）导致的慢查询，可以考虑添加缓存，或分批并发查询后再聚合。
5. 新增联合索引后，删除最左前缀匹配的重复索引，保证单表索引数量不超过5个
6. 原则上禁止单次查询扫全表操作。如确有需要扫全表的场景，需要使用基于主键id的cursor查询，分批查询出所需的数据再进行组装
7. 强烈不建议采用limit分页查询，非在线场景下，禁止使用limit分页查询，当数据量较大时，容易造成深分页问题。如确有需要分页的场景，需要使用主键id + offset查询
8. 批量写入场景，工单、定时任务等，需要有写入速度的限制措施，防止因为写入过快导致主从延迟过高
9. 禁止在事务逻辑中访问外部资源，如RPC调用，Redis访问等。否则会导致锁被长期占用。
